{"version":3,"sources":["api/index.js","components/card/card.jsx","components/card-list/card-list.jsx","components/search-field/search-field.jsx","App.jsx","index.js"],"names":["getMonsters","a","axios","get","response","statusText","ok","data","monsters","Card","className","src","this","props","monster","id","alt","name","email","Component","CardList","map","SearchField","type","placeholder","onChange","handleChange","App","componentDidMount","then","setState","isError","errorMessage","state","searchField","filter","toLowerCase","includes","e","target","value","ReactDOM","render","document","getElementById"],"mappings":"gVAEaA,EAAW,uCAAG,4BAAAC,EAAA,+EAGNC,IAAMC,IAAI,8CAHJ,QAGvBC,EAHuB,QAIdC,WAAa,GACtBD,EAASE,IAAK,EACdF,EAASG,KAAKC,SAAWJ,EAASG,KANX,iDAQvBH,EAAW,KAAMA,UACRC,WAAa,qCACtBD,EAASE,IAAK,EACdF,EAASG,KAAKC,SAAW,GAXF,iCAalBJ,GAbkB,yDAAH,qD,qBCgBTK,E,4JAdb,WACE,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BC,KAAKC,MAAMC,QAAQC,GAA7C,0BACHC,IAAI,YAEN,6BAAiCJ,KAAKC,MAAMC,QAAQG,MAA3CL,KAAKC,MAAMC,QAAQC,IAC5B,4BAAIH,KAAKC,MAAMC,QAAQI,e,GATZC,aCaJC,G,kKAXb,WACE,OACE,qBAAKV,UAAU,YAAf,SACGE,KAAKC,MAAML,SAASa,KAAI,SAACP,GAAD,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,a,GALNI,cCYRG,G,kKAZb,WACE,OACE,uBACEZ,UAAU,eACVa,KAAK,SACLC,YAAaZ,KAAKC,MAAMW,YACxBC,SAAUb,KAAKC,MAAMa,mB,GAPHP,cCmDXQ,E,kDA/Cb,aAAe,IAAD,8BACZ,gBAoCFC,kBAAoB,WAClB5B,IAAc6B,MAAK,SAACzB,GAAD,OACjB,EAAK0B,SAAS,CACZC,QAAS3B,EAASE,GAClB0B,aAAc5B,EAASC,WACvBG,SAAUJ,EAASG,KAAKC,eAxC5B,EAAKyB,MAAQ,CACXzB,SAAU,GACVuB,SAAS,EACTC,aAAc,GACdE,YAAa,IANH,E,0CAUd,WAAU,IAAD,SAC2BtB,KAAKqB,MAA/BC,EADD,EACCA,YACFC,EAFC,EACc3B,SACG2B,QAAO,SAACrB,GAC9B,OAAOA,EAAQG,KAAKmB,cAAcC,SAASH,EAAYE,kBAWzD,OACE,sBAAK1B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEgB,aAAc,SAACY,GAAD,OAAO,EAAKR,SAAS,CAAEI,YAAaI,EAAEC,OAAOC,SAC3DhB,YAAY,sBAEZZ,KAAKqB,MAAMF,QAA+C,GAArC,6BAAKnB,KAAKqB,MAAMD,eACvC,cAAC,EAAD,CAAUxB,SAAU2B,W,GAjCVhB,aCDlBsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.55f81f77.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport const getMonsters = async () => {\n  let response;\n  try {\n    response = await axios.get('https://jsonplaceholder.typicode.com/users');\n    response.statusText = \"\";\n    response.ok = true;\n    response.data.monsters = response.data;\n  } catch (error) {\n    response = error.response;\n    response.statusText = 'Lista de monstros indisponÃ­vel.';\n    response.ok = false;\n    response.data.monsters = [];\n  }\n  return response;\n};\n\nexport const getPeixesPromisse = () => {\n  const returnFromAxios = axios.get('http://localhost:3004/peixes')\n  .then(response => {\n    console.log(response);\n    return response;\n  })\n  .catch(error => {\n    console.log(error.response);\n    return error.response;\n  });\n  return returnFromAxios;\n\n};\n\n\nexport const getPeixes = async () => {\n  const response = await axios.get('http://localhost:3004/peixes')\n  return response.data;\n};\n\nexport const getUsers = async () => {\n  const response = await axios.get('http://localhost:3004/users/');\n  return response;\n};\n","import React, { Component } from 'react';\nimport './card.styles.css';\n\nclass Card extends Component {\n  render() {\n    return (\n      <div className=\"card-container\">\n        <img\n          src={`https://robohash.org/${this.props.monster.id}?set=set2&size=180x180`}\n          alt=\"Monster\"\n        />\n        <h2 key={this.props.monster.id}>{this.props.monster.name}</h2>\n        <p>{this.props.monster.email}</p>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from 'react';\nimport Card from '../card/card';\nimport './card-list.styles.css';\n\nclass CardList extends Component {\n  render() {\n    return (\n      <div className=\"card-list\">\n        {this.props.monsters.map((monster) => (\n          <Card key={monster.id} monster={monster} />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default CardList;\n","import React, { Component } from 'react';\nimport './search-field.styles.css';\n\nclass SearchField extends Component {\n  render() {\n    return (\n      <input\n        className=\"search-field\"\n        type=\"search\"\n        placeholder={this.props.placeholder}\n        onChange={this.props.handleChange}\n      />\n    );\n  }\n}\n\nexport default SearchField;\n","import React, { Component } from 'react';\nimport { getMonsters } from './api';\nimport './App.css';\nimport CardList from './components/card-list/card-list';\nimport SearchField from './components/search-field/search-field';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      isError: false,\n      errorMessage: '',\n      searchField: '',\n    };\n  }\n\n  render() {\n    const { searchField, monsters } = this.state;\n    const filter = monsters.filter((monster) => {\n      return monster.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n    // if (searchField !== '') {\n    //   filter = monsters.filter((monster) => {\n    //     return monster.name.toLowerCase().includes(searchField.toLowerCase());\n    //   });\n    // } else {\n    //   filter = monsters;\n    // }\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Heroes</h1>\n        <SearchField\n          handleChange={(e) => this.setState({ searchField: e.target.value })}\n          placeholder=\"busca de monstros\"\n        />\n        {!this.state.isError ? <h1>{this.state.errorMessage}</h1> : ''}\n        <CardList monsters={filter} />\n      </div>\n    );\n  }\n\n  componentDidMount = () => {\n    getMonsters().then((response) =>\n      this.setState({\n        isError: response.ok,\n        errorMessage: response.statusText,\n        monsters: response.data.monsters,\n      })\n    );\n  };\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}